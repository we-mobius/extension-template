{"version":3,"sources":["webpack://extension-template/./src/background.js"],"names":["chrome","contextMenus","onClicked","addListener","info","tab","menuItemId","tabs","create","url","encodeURI","selectionText","runtime","onInstalled","contexts","i","length","context","title","id","parentId","type","extension","lastError","err"],"mappings":"mBAAA,IAOEA,OAAOC,aAAaC,UAAUC,aAAY,SAAyBC,EAAMC,GAC/C,SAApBD,EAAKE,YAGPN,OAAOO,KAAKC,OAAO,CAAEC,IAAK,uCAAyCC,UAAUN,EAAKO,iBAE7D,UAAnBP,EAAKE,YAA6C,UAAnBF,EAAKE,YAIV,aAAnBF,EAAKE,YAA6BF,EAAKE,cAapDN,OAAOY,QAAQC,YAAYV,aAAY,WAIrC,IAFA,IAAIW,EAAW,CAAC,OAAQ,YAAa,OAAQ,WAAY,QAAS,QAChE,SACOC,EAAI,EAAGA,EAAID,EAASE,OAAQD,IACnC,KAAIE,EAAUH,EAASC,GACnBG,EAAQ,SAAWD,EAAU,cACxBjB,OAAOC,aAAaO,OAAO,CAClCU,MAAOA,EACPJ,SAAU,CAACG,GACXE,GAAI,UAAYF,IAMpBjB,OAAOC,aAAaO,OAAO,CAAEU,MAAO,mBAAoBC,GAAI,WAC5DnB,OAAOC,aAAaO,OAClB,CAAEU,MAAO,UAAWE,SAAU,SAAUD,GAAI,WAC9CnB,OAAOC,aAAaO,OAClB,CAAEU,MAAO,UAAWE,SAAU,SAAUD,GAAI,WAI9CnB,OAAOC,aAAaO,OAAO,CACzBU,MAAO,UACPG,KAAM,QACNF,GAAI,WAENnB,OAAOC,aAAaO,OAAO,CACzBU,MAAO,UACPG,KAAM,QACNF,GAAI,WAKNnB,OAAOC,aAAaO,OAClB,CAAEU,MAAO,YAAaG,KAAM,WAAYF,GAAI,cAC9CnB,OAAOC,aAAaO,OAClB,CAAEU,MAAO,YAAaG,KAAM,WAAYF,GAAI,cAO9CnB,OAAOC,aAAaO,OAAO,CAAEU,MAAO,OAAQC,GAAI,YAAa,WACvDnB,OAAOsB,UAAUC,gBAMzBvB,OAAOY,QAAQC,YAAYV,aAAY,WACrCH,OAAOC,aAAaO,OAAO,CACzBW,GAAI,oBACJD,MAAO,sBACPJ,SAAU,CAAC,kBAGfd,OAAOC,aAAaO,OAAO,CACzBW,GAAI,OACJD,MAAO,YACPJ,SAAU,CAAC,eAEb,MAAOU,M","file":"background.js","sourcesContent":["try {\r\n// Copyright (c) 2012 The Chromium Authors. All rights reserved.\r\n  // Use of this source code is governed by a BSD-style license that can be\r\n  // found in the LICENSE file.\r\n\r\n  // The onClicked callback function.\r\n\r\n  chrome.contextMenus.onClicked.addListener(function onClickHandler (info, tab) {\r\n    if (info.menuItemId === 'xixi') {\r\n      // 注意不能使用location.href，因为location是属于background的window对象\r\n      console.log(info)\r\n      chrome.tabs.create({ url: 'https://www.baidu.com/s?ie=utf-8&wd=' + encodeURI(info.selectionText) })\r\n    }\r\n    if (info.menuItemId == 'radio1' || info.menuItemId == 'radio2') {\r\n      console.log('radio item ' + info.menuItemId +\r\n                ' was clicked (previous checked state was ' +\r\n                info.wasChecked + ')')\r\n    } else if (info.menuItemId == 'checkbox1' || info.menuItemId == 'checkbox2') {\r\n      console.log(JSON.stringify(info))\r\n      console.log('checkbox item ' + info.menuItemId +\r\n                ' was clicked, state is now: ' + info.checked +\r\n                ' (previous state was ' + info.wasChecked + ')')\r\n    } else {\r\n      console.log('item ' + info.menuItemId + ' was clicked')\r\n      console.log('info: ' + JSON.stringify(info))\r\n      console.log('tab: ' + JSON.stringify(tab))\r\n    }\r\n  })\r\n\r\n  // Set up context menu tree at install time.\r\n  chrome.runtime.onInstalled.addListener(function () {\r\n  // Create one test item for each context type.\r\n    var contexts = ['page', 'selection', 'link', 'editable', 'image', 'video',\r\n      'audio']\r\n    for (var i = 0; i < contexts.length; i++) {\r\n      var context = contexts[i]\r\n      var title = \"Test '\" + context + \"' menu item\"\r\n      var id = chrome.contextMenus.create({\r\n        title: title,\r\n        contexts: [context],\r\n        id: 'context' + context\r\n      })\r\n      console.log(\"'\" + context + \"' item:\" + id)\r\n    }\r\n\r\n    // Create a parent item and two children.\r\n    chrome.contextMenus.create({ title: 'Test parent item', id: 'parent' })\r\n    chrome.contextMenus.create(\r\n      { title: 'Child 1', parentId: 'parent', id: 'child1' })\r\n    chrome.contextMenus.create(\r\n      { title: 'Child 2', parentId: 'parent', id: 'child2' })\r\n    console.log('parent child1 child2')\r\n\r\n    // Create some radio items.\r\n    chrome.contextMenus.create({\r\n      title: 'Radio 1',\r\n      type: 'radio',\r\n      id: 'radio1'\r\n    })\r\n    chrome.contextMenus.create({\r\n      title: 'Radio 2',\r\n      type: 'radio',\r\n      id: 'radio2'\r\n    })\r\n    console.log('radio1 radio2')\r\n\r\n    // Create some checkbox items.\r\n    chrome.contextMenus.create(\r\n      { title: 'Checkbox1', type: 'checkbox', id: 'checkbox1' })\r\n    chrome.contextMenus.create(\r\n      { title: 'Checkbox2', type: 'checkbox', id: 'checkbox2' })\r\n    console.log('checkbox1 checkbox2')\r\n\r\n    // Intentionally create an invalid item, to show off error checking in the\r\n    // create callback.\r\n    console.log('About to try creating an invalid item - an error about ' +\r\n      'duplicate item child1 should show up')\r\n    chrome.contextMenus.create({ title: 'Oops', id: 'child10' }, function () {\r\n      if (chrome.extension.lastError) {\r\n        console.log('Got expected error: ' + chrome.extension.lastError.message)\r\n      }\r\n    })\r\n  })\r\n\r\n  chrome.runtime.onInstalled.addListener(function () {\r\n    chrome.contextMenus.create({\r\n      id: 'sampleContextMenu',\r\n      title: 'Sample Context Menu',\r\n      contexts: ['selection']\r\n    })\r\n  })\r\n  chrome.contextMenus.create({\r\n    id: 'xixi',\r\n    title: '使用度娘搜索：%s', // %s表示选中的文字\r\n    contexts: ['selection']// 只有当选中文字时才会出现此右键菜单\r\n  })\r\n} catch (err) {\r\n  console.log(err)\r\n}\r\n"],"sourceRoot":""}